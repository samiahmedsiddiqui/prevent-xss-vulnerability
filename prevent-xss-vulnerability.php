<?php
/**
 * Plugin Name: Prevent XSS Vulnerability
 * Plugin URI: https://wordpress.org/plugins/prevent-xss-vulnerability/
 * Description: Secure your site from the XSS Attack.
 * Version: 1.0.0
 * Author: Sami Ahmed Siddiqui
 * Author URI: https://www.yasglobal.com/web-design-development/wordpress/prevent-xss-vulnerability/
 * License: GPLv3
 *
 * Text Domain: prevent-xss-vulnerability
 * Domain Path: /languages/
 *
 * @package PreventXSSVulnerability
 */

/**
 *  Prevent XSS Vulnerability - Secure your website from XSS Attacks
 *  Copyright (C) 2017-2020, Sami Ahmed Siddiqui <sami.siddiqui@yasglobal.com>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.

 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.

 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Make sure we don't expose any info if called directly
if ( ! defined( 'ABSPATH' ) ) {
    esc_html_e(
        'Hi there! I\'m just a plugin, not much I can do when called directly.',
        'prevent-xss-vulnerability'
    );
    exit;
}

final class Prevent_XSS_Vulnerability
{

    /**
     * Class constructor.
     */
    public function __construct()
    {
        $this->setup_constants();
        $this->includes();
    }

    /**
     * Setup plugin constants
     *
     * @access private
     * @since 0.1
     *
     * @return void
     */
    private function setup_constants()
    {
        if ( ! defined( 'PREVENT_XSS_VULNERABILITY_FILE' ) ) {
            define( 'PREVENT_XSS_VULNERABILITY_FILE', __FILE__ );
        }

        if ( ! defined( 'PREVENT_XSS_VULNERABILITY_PLUGIN_VERSION' ) ) {
            define( 'PREVENT_XSS_VULNERABILITY_PLUGIN_VERSION', '1.0.0' );
        }

        if ( ! defined( 'PREVENT_XSS_VULNERABILITY_PATH' ) ) {
            define( 'PREVENT_XSS_VULNERABILITY_PATH',
                plugin_dir_path( PREVENT_XSS_VULNERABILITY_FILE )
            );
        }

        if ( ! defined( 'PREVENT_XSS_VULNERABILITY_BASENAME' ) ) {
            define( 'PREVENT_XSS_VULNERABILITY_BASENAME',
                plugin_basename( PREVENT_XSS_VULNERABILITY_FILE )
            );
        }
    }

    /**
     * Include required files
     *
     * @access private
     * @since 0.1
     *
     * @return void
     */
    private function includes()
    {
        $admin_file_path    = PREVENT_XSS_VULNERABILITY_PATH .
            'admin/class-prevent-xss-vulnerability-admin.php';
        $frontend_file_path = PREVENT_XSS_VULNERABILITY_PATH .
            'frontend/class-prevent-xss-vulnerability-frontend.php';

        include_once $frontend_file_path;

        $prevent_xss_frontend = new Prevent_XSS_Vulnerability_Frontend();
        $prevent_xss_frontend->init();

        if ( is_admin() ) {
            include_once $admin_file_path;
            new Prevent_XSS_Vulnerability_Admin();

            add_action( 'plugins_loaded', array( $this, 'load_textdomain' ) );
        }
    }

    /**
     * Loads the plugin language files
     *
     * @access public
     * @since 0.1
     *
     * @return void
     */
    public function load_textdomain()
    {
        $dirname = rtrim( PREVENT_XSS_VULNERABILITY_PATH , '/' );

        load_plugin_textdomain( 'prevent-xss-vulnerability', FALSE,
            wp_basename( $dirname ) . '/languages/'
        );
    }
}

new Prevent_XSS_Vulnerability();
